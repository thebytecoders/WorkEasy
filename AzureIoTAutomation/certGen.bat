@echo off
setlocal EnableDelayedExpansion

set "-x"
set "-o" "errexit"
set "-o" "pipefail"
SET "root_ca_dir=."
SET "home_dir=."
SET "algorithm=genrsa"
SET "COUNTRY=US"
SET "STATE=WA"
SET "LOCALITY=Redmond"
SET "ORGANIZATION_NAME=My Organization"
SET "root_ca_password=1234"
SET "key_bits_length=4096"
SET "days_till_expire=30"
SET "ca_chain_prefix=azure-iot-test-only.chain.ca"
SET "intermediate_ca_dir=."
SET "openssl_root_config_file=%CD%\openssl_root_ca.cnf"
SET "openssl_intermediate_config_file=%CD%\openssl_device_intermediate_ca.cnf"
SET "intermediate_ca_password=1234"
SET "root_ca_prefix=azure-iot-test-only.root.ca"
SET "intermediate_ca_prefix=azure-iot-test-only.intermediate"
set "+x"
IF "%~1" == "create_root_and_intermediate" (
  CALL :initial_cert_generation
) ELSE (
  IF "%~1" == "create_verification_certificate" (
    CALL :generate_verification_certificate "%~2"
  ) ELSE (
    IF "%~1" == "create_device_certificate" (
      CALL :generate_device_certificate "%~2"
    ) ELSE (
      IF "%~1" == "create_device_certificate_from_intermediate" (
        CALL :generate_device_certificate_from_intermediate "%~2"
      ) ELSE (
        IF "%~1" == "create_edge_device_certificate" (
          CALL :generate_edge_device_certificate "%~2"
        ) ELSE (
          echo "Usage: create_root_and_intermediate                               # Creates a new root and intermediate certificates"
          echo "       create_verification_certificate <subjectName>              # Creates a verification certificate, signed with <subjectName>"
          echo "       create_device_certificate <subjectName>                    # Creates a device certificate signed by root with <subjectName>"
          echo "       create_device_certificate_from_intermediate <subjectName>  # Creates a device certificate signed by intermediate with <subjectName>"
          echo "       create_edge_device_certificate <subjectName>               # Creates an edge device certificate, signed with <subjectName>"
          exit "1"
        )
      )
    )
  )
)
CALL :warn_certs_not_for_production

EXIT /B %ERRORLEVEL%

:makeCNsubject
local "result="/CN=%~1""
IF "%OSTYPE%"=="win32" (
  SET "result=/%result%"
)
echo "%result%"
EXIT /B 0

:warn_certs_not_for_production
[ "!" "-z" "%TERM%" "]" && tput "smso"
[ "!" "-z" "%TERM%" "]" && tput "setaf" "3"
echo "Certs generated by this script are not for production (e.g. they have hard-coded passwords of '1234'."
echo "This script is only to help you understand Azure IoT Hub CA Certificates."
echo "Use your official, secure mechanisms for this cert generation."
echo "Also note that these certs will expire in %days_till_expire% days."
[ "!" "-z" "%TERM%" "]" && tput "sgr0"
EXIT /B 0

:generate_root_ca
local "common_name=Azure IoT Hub CA Cert Test Only"
local "password_cmd=" -aes256 -passout pass:%root_ca_password% ""
cd "%home_dir%"
echo "Creating the Root CA Private Key"
openssl "%algorithm%" "%password_cmd%" "-out" "%root_ca_dir%/private/%root_ca_prefix%.key.pem" "%key_bits_length%"
[ "%?%" "-eq" "0" "]" || exit "%?%"
chmod "400" "%root_ca_dir%/private/%root_ca_prefix%.key.pem"
[ "%?%" "-eq" "0" "]" || exit "%?%"
echo "Creating the Root CA Certificate"
SET "password_cmd= -passin pass:%root_ca_password% "
SET _INTERPOLATION_0=
FOR /f "delims=" %%a in ('makeCNsubject "${common_name}"') DO (SET "_INTERPOLATION_0=!_INTERPOLATION_0! %%a")
openssl "req" "-new" "-x509" "-config" "%openssl_root_config_file%" "%password_cmd%" "-key" "%root_ca_dir%/private/%root_ca_prefix%.key.pem" "-subj" "!_INTERPOLATION_0!" "-days" "!days_till_expire!" "-sha256" "-extensions" "v3_ca" "-out" "!root_ca_dir!/certs/!root_ca_prefix!.cert.pem"
[ "!?!" "-eq" "0" "]" || exit "!?!"
chmod "444" "!root_ca_dir!/certs/!root_ca_prefix!.cert.pem"
[ "!?!" "-eq" "0" "]" || exit "!?!"
echo "CA Root Certificate Generated At:"
echo "---------------------------------"
echo "    !root_ca_dir!/certs/!root_ca_prefix!.cert.pem"
echo ""
openssl "x509" "-noout" "-text" "-in" "!root_ca_dir!/certs/!root_ca_prefix!.cert.pem"
CALL :warn_certs_not_for_production
[ "!?!" "-eq" "0" "]" || exit "!?!"
EXIT /B 0

:generate_intermediate_ca
local "common_name=Azure IoT Hub Intermediate Cert Test Only"
local "password_cmd=" -aes256 -passout pass:!intermediate_ca_password! ""
echo "Creating the Intermediate Device CA"
echo "-----------------------------------"
cd "!home_dir!"
openssl "!algorithm!" "!password_cmd!" "-out" "!intermediate_ca_dir!/private/!intermediate_ca_prefix!.key.pem" "!key_bits_length!"
[ "!?!" "-eq" "0" "]" || exit "!?!"
chmod "400" "!intermediate_ca_dir!/private/!intermediate_ca_prefix!.key.pem"
[ "!?!" "-eq" "0" "]" || exit "!?!"
echo "Creating the Intermediate Device CA CSR"
echo "-----------------------------------"
SET "password_cmd= -passin pass:!intermediate_ca_password! "
SET _INTERPOLATION_1=
FOR /f "delims=" %%a in ('makeCNsubject "${common_name}"') DO (SET "_INTERPOLATION_1=!_INTERPOLATION_1! %%a")
openssl "req" "-new" "-sha256" "!password_cmd!" "-config" "!openssl_intermediate_config_file!" "-subj" "!_INTERPOLATION_1!" "-key" "!intermediate_ca_dir!/private/!intermediate_ca_prefix!.key.pem" "-out" "!intermediate_ca_dir!/csr/!intermediate_ca_prefix!.csr.pem"
[ "!?!" "-eq" "0" "]" || exit "!?!"
echo "Signing the Intermediate Certificate with Root CA Cert"
echo "-----------------------------------"
SET "password_cmd= -passin pass:!root_ca_password! "
openssl "ca" "-batch" "-config" "!openssl_root_config_file!" "!password_cmd!" "-extensions" "v3_intermediate_ca" "-days" "!days_till_expire!" "-notext" "-md" "sha256" "-in" "!intermediate_ca_dir!/csr/!intermediate_ca_prefix!.csr.pem" "-out" "!intermediate_ca_dir!/certs/!intermediate_ca_prefix!.cert.pem"
[ "!?!" "-eq" "0" "]" || exit "!?!"
chmod "444" "!intermediate_ca_dir!/certs/!intermediate_ca_prefix!.cert.pem"
[ "!?!" "-eq" "0" "]" || exit "!?!"
echo "Verify signature of the Intermediate Device Certificate with Root CA"
echo "-----------------------------------"
openssl "verify" "-CAfile" "!root_ca_dir!/certs/!root_ca_prefix!.cert.pem" "!intermediate_ca_dir!/certs/!intermediate_ca_prefix!.cert.pem"
[ "!?!" "-eq" "0" "]" || exit "!?!"
echo "Intermediate CA Certificate Generated At:"
echo "-----------------------------------------"
echo "    !intermediate_ca_dir!/certs/!intermediate_ca_prefix!.cert.pem"
echo ""
openssl "x509" "-noout" "-text" "-in" "!intermediate_ca_dir!/certs/!intermediate_ca_prefix!.cert.pem"
[ "!?!" "-eq" "0" "]" || exit "!?!"
echo "Create Root + Intermediate CA Chain Certificate"
echo "-----------------------------------"
cat "!intermediate_ca_dir!/certs/!intermediate_ca_prefix!.cert.pem" "!root_ca_dir!/certs/!root_ca_prefix!.cert.pem" REM UNKNOWN: {"type":"Redirect","op":{"text":">","type":"great"},"file":{"text":"\"${intermediate_ca_dir}/certs/${ca_chain_prefix}.cert.pem\"","expansion":[{"loc":{"start":1,"end":22},"parameter":"intermediate_ca_dir","type":"ParameterExpansion"},{"loc":{"start":30,"end":47},"parameter":"ca_chain_prefix","type":"ParameterExpansion"}],"type":"Word"}}
[ "!?!" "-eq" "0" "]" || exit "!?!"
chmod "444" "!intermediate_ca_dir!/certs/!ca_chain_prefix!.cert.pem"
[ "!?!" "-eq" "0" "]" || exit "!?!"
echo "Root + Intermediate CA Chain Certificate Generated At:"
echo "------------------------------------------------------"
echo "    !intermediate_ca_dir!/certs/!ca_chain_prefix!.cert.pem"
CALL :warn_certs_not_for_production
EXIT /B 0

:generate_device_certificate_common
local "common_name="%~1""
local "device_prefix="%~2""
local "certificate_dir="%~3""
local "ca_password="%~4""
local "server_pfx_password=1234"
local "password_cmd=" -passin pass:!ca_password! ""
local "openssl_config_file="%~5""
local "openssl_config_extension="%~6""
local "cert_type_diagnostic="%~7""
echo "Creating !cert_type_diagnostic! Certificate"
echo "----------------------------------------"
cd "!home_dir!"
openssl "!algorithm!" "-out" "!certificate_dir!/private/!device_prefix!.key.pem" "!key_bits_length!"
[ "!?!" "-eq" "0" "]" || exit "!?!"
chmod "444" "!certificate_dir!/private/!device_prefix!.key.pem"
[ "!?!" "-eq" "0" "]" || exit "!?!"
echo "Create the !cert_type_diagnostic! Certificate Request"
echo "----------------------------------------"
SET _INTERPOLATION_2=
FOR /f "delims=" %%a in ('makeCNsubject "${common_name}"') DO (SET "_INTERPOLATION_2=!_INTERPOLATION_2! %%a")
openssl "req" "-config" "!openssl_config_file!" "-key" "!certificate_dir!/private/!device_prefix!.key.pem" "-subj" "!_INTERPOLATION_2!" "-new" "-sha256" "-out" "!certificate_dir!/csr/!device_prefix!.csr.pem"
[ "!?!" "-eq" "0" "]" || exit "!?!"
openssl "ca" "-batch" "-config" "!openssl_config_file!" "!password_cmd!" "-extensions" "!openssl_config_extension!" "-days" "!days_till_expire!" "-notext" "-md" "sha256" "-in" "!certificate_dir!/csr/!device_prefix!.csr.pem" "-out" "!certificate_dir!/certs/!device_prefix!.cert.pem"
[ "!?!" "-eq" "0" "]" || exit "!?!"
chmod "444" "!certificate_dir!/certs/!device_prefix!.cert.pem"
[ "!?!" "-eq" "0" "]" || exit "!?!"
echo "Verify signature of the !cert_type_diagnostic!" " certificate with the signer"
echo "-----------------------------------"
openssl "verify" "-CAfile" "!certificate_dir!/certs/!ca_chain_prefix!.cert.pem" "!certificate_dir!/certs/!device_prefix!.cert.pem"
[ "!?!" "-eq" "0" "]" || exit "!?!"
echo "!cert_type_diagnostic! Certificate Generated At:"
echo "----------------------------------------"
echo "    !certificate_dir!/certs/!device_prefix!.cert.pem"
echo ""
openssl "x509" "-noout" "-text" "-in" "!certificate_dir!/certs/!device_prefix!.cert.pem"
[ "!?!" "-eq" "0" "]" || exit "!?!"
echo "Create the !cert_type_diagnostic! PFX Certificate"
echo "----------------------------------------"
openssl "pkcs12" "-in" "!certificate_dir!/certs/!device_prefix!.cert.pem" "-inkey" "!certificate_dir!/private/!device_prefix!.key.pem" "-password" "pass:!server_pfx_password!" "-export" "-out" "!certificate_dir!/certs/!device_prefix!.cert.pfx"
[ "!?!" "-eq" "0" "]" || exit "!?!"
echo "!cert_type_diagnostic! PFX Certificate Generated At:"
echo "--------------------------------------------"
echo "    !certificate_dir!/certs/!device_prefix!.cert.pfx"
[ "!?!" "-eq" "0" "]" || exit "!?!"
EXIT /B 0

:generate_leaf_certificate
local "common_name="%~1""
local "device_prefix="%~2""
local "certificate_dir="%~3""
local "ca_password="%~4""
local "openssl_config_file="%~5""
CALL :generate_device_certificate_common "!common_name!" , "!device_prefix!" , "!certificate_dir!" , "!ca_password!" , "!openssl_config_file!" , "usr_cert" , "Leaf Device"
EXIT /B 0

:prepare_filesystem
IF "!" "-f" "!openssl_root_config_file!" (
  echo "Missing file !openssl_root_config_file!"
  exit "1"
)
IF "!" "-f" "!openssl_intermediate_config_file!" (
  echo "Missing file !openssl_intermediate_config_file!"
  exit "1"
)
DEL /S "csr"
DEL /S "private"
DEL /S "certs"
DEL /S "intermediateCerts"
DEL /S "newcerts"
mkdir "-p" "csr"
mkdir "-p" "private"
mkdir "-p" "certs"
mkdir "-p" "intermediateCerts"
mkdir "-p" "newcerts"
DEL  "%CD%\index.txt"
touch "%CD%\index.txt"
DEL  "%CD%\serial"
echo REM UNKNOWN: {"type":"Redirect","op":{"text":">","type":"great"},"file":{"text":"./serial","type":"Word"},"numberIo":{"text":"01","type":"io_number"}}
EXIT /B 0

:initial_cert_generation
CALL :prepare_filesystem
CALL :generate_root_ca
CALL :generate_intermediate_ca
EXIT /B 0

:generate_verification_certificate
IF "-z" "%~1" (
  echo "Usage: create_verification_certificate <subjectName>"
  exit "1"
)
DEL  "%CD%\private\verification-code.key.pem"
DEL  "%CD%\certs\verification-code.cert.pem"
CALL :generate_leaf_certificate "%~1" , "verification-code" , "!root_ca_dir!" , "!root_ca_password!" , "!openssl_root_config_file!"
EXIT /B 0

:generate_device_certificate
IF "-z" "%~1" (
  echo "Usage: create_device_certificate <subjectName>"
  exit "1"
)
DEL  "%CD%\private\new-device.key.pem"
DEL  "%CD%\certs\new-device.key.pem"
DEL  "%CD%\certs\new-device-full-chain.cert.pem"
CALL :generate_leaf_certificate "%~1" , "new-device" , "!root_ca_dir!" , "!root_ca_password!" , "!openssl_root_config_file!"
EXIT /B 0

:generate_device_certificate_from_intermediate
IF "-z" "%~1" (
  echo "Usage: create_device_certificate_from_intermediate <subjectName>"
  exit "1"
)
DEL  "%CD%\private\new-device.key.pem"
DEL  "%CD%\certs\new-device.key.pem"
DEL  "%CD%\certs\new-device-full-chain.cert.pem"
CALL :generate_leaf_certificate "%~1" , "new-device" , "!intermediate_ca_dir!" , "!intermediate_ca_password!" , "!openssl_intermediate_config_file!"
EXIT /B 0

:generate_edge_device_certificate
local "device_prefix=new-edge-device"
IF "-z" "%~1" (
  echo "Usage: create_edge_device_certificate <subjectName>"
  exit "1"
)
DEL  "%CD%\private\new-edge-device.key.pem"
DEL  "%CD%\certs\new-edge-device.cert.pem"
DEL  "%CD%\certs\new-edge-device-full-chain.cert.pem"
CALL :generate_device_certificate_common "%~1.ca" , "!device_prefix!" , "!intermediate_ca_dir!" , "!intermediate_ca_password!" , "!openssl_intermediate_config_file!" , "v3_intermediate_ca" , "Edge Device"
EXIT /B 0